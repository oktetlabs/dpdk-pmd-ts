# SPDX-License-Identifier: Apache-2.0
# (c) Copyright 2016 - 2022 Xilinx, Inc. All rights reserved.
TE_PLATFORM([], [], [-D_GNU_SOURCE], [], [],
            [logger_core tools logic_expr conf_oid rpcxdr rpc_types asn ndn \
             ipc bsapi loggerten rcfapi confapi comm_net_engine rcfunix \
             tapi rcfrpc tapi_rpc tapi_env tapi_tad trc log_proc \
             rpc_dpdk rpcc_dpdk tapi_job tapi_dpdk])

TE_TOOLS([rgt trc tce])

TE_TOOL_PARMS([trc], [--with-popups --with-log-urls])

TE_LIB_PARMS([tapi_tad], [], [],
             [--with-arp --with-eth --with-ipstack --with-rte-mbuf])

TE_LIB_PARMS([rpcxdr], [], [],
             [--with-rpcdefs=tarpc_dpdk.x.m4,tarpc_job.x.m4])

. $TE_BASE/engine/builder/te_functions
. $TE_BASE/engine/builder/te_ta_ssh_helper
define([TE_AGENT_BUILD], [
    if test -n "${$1}" -o -n "${$1_BUILD_HOST}" -o "${$1_BUILD}" = local ; then
        if ! te_is_in_list "${$1_TA_TYPE}" $TE_BS_PLATFORMS ; then
            te_ta_type_as_platform "$1"

            case "${$1_TA_TYPE}" in
                *aarch64*) TE_TA_HOST=aarch64-pc-linux ;;
                *64*) TE_TA_HOST=x86_64-pc-linux ;;
                *)    TE_TA_HOST=i386-pc-linux   ;;
            esac

            TE_AGENT_BUILD_PARMS=
            TE_AGENT_BUILD_CC=${$1_CC}
            TE_AGENT_BUILD_CFLAGS=${$1_CFLAGS}
            test -n "$TE_AGENT_BUILD_CC" && TE_AGENT_BUILD_CC="CC=$TE_AGENT_BUILD_CC"

            RTE_MACHINE=${$1_RTE_MACHINE:-${TE_RTE_MACHINE}}

            TE_PLATFORM_BUILD([${$1_TA_TYPE}], [])
            TE_PLATFORM([${$1_TA_TYPE}], [$TE_AGENT_BUILD_CC],
                        [$TE_AGENT_BUILD_CFLAGS -D_GNU_SOURCE],
                        [-march=${RTE_MACHINE:-native}],
                        [],
                        [logger_core tools conf_oid rpcxdr rpc_types asn ndn \
                         comm_net_agent loggerta rpctransport agentlib dpdkrpclib \
                         rpcserver dpdkrpcserver rcfpch tad dpdktad netconf \
                         rpc_dpdk rpcs_dpdk rpcs_job ta_job],
                        [${$1_BUILD}])

            # DPDK v24.11-rc1 has vduse.h in kernel/linux/uapi/linux which is
            # ignored by rsync because incorrect interpretation of
            # kernel/linux/uapi/.gitignore.
            # So, disable usage of .gitignore for now.
            TE_PLATFORM_EXT([dpdk], [${$1_TA_TYPE}], [${RTE_SDK}], [], [],
                            [${SF_TS_CONFDIR}/scripts/build-dpdk \"${RTE_MACHINE}\" \"${$1_DPDK_CFLAGS}\"],
                            [], [], [RTE_MLX5_PMD], [--disable-vcs-ignores])
            TE_TCE([dpdk], [external], [${$1_TA_TYPE}], [${RTE_SDK}], [], [lib/librte_eal])

            TE_EXT_LIBS([${$1_TA_TYPE}], [${TE_TA_HOST}], [pcap])

            TE_LIB_PARMS([tad], [${$1_TA_TYPE}], [],
                         [--with-arp --with-ppp --with-eth --with-ipstack \
                          --with-vxlan --with-geneve --with-gre \
                          --with-packet-mmap-rx-ring --without-static-libc])

            TE_LIB_PARMS([dpdktad], [${$1_TA_TYPE}], [tad],
                         [--with-arp --with-ppp --with-eth --with-ipstack --with-rte-mbuf \
                          --with-vxlan --with-geneve --with-gre \
                          --without-static-libc --without-cs])

            TE_LIB_PARMS([rpcxdr], [${$1_TA_TYPE}], [],
                         [--with-rpcdefs=tarpc_dpdk.x.m4,tarpc_job.x.m4])
            TE_LIB_PARMS([rcfpch], [${$1_TA_TYPE}], [], [--with-sniffers],
                         [], [], [])

            TE_LIB_PARMS([dpdkrpclib], [${$1_TA_TYPE}], [agentlib],
                         [--enable-dlfcn-lookup --disable-ftp --disable-power-sw],
                         [], [], [])

            TE_LIB_PARMS([dpdkrpcserver], [${$1_TA_TYPE}], [rpcserver],
                         [--with-agentlib=dpdkrpclib],
                         [], [], [])

            TE_TA_TYPE([${$1_TA_TYPE}], [${$1_TA_TYPE}], [unix],
                       [--enable-pci \
                        --with-rcf-rpc \
                        --with-libnetconf \
                        --with-serialparse \
                        --with-sniffers=yes \
                        --with-aggr \
                        --without-static-libc \
                        --with-iptables],
                       [], [], [], [comm_net_agent ndn asn])

            TE_TA_APP([ta_rpcprovider], [${$1_TA_TYPE}], [${$1_TA_TYPE}],
                      [ta_rpcprovider], [], [],
                      [rpcs_job ta_job rpcserver agentlib rpcxdrta \
                       rpc_types rpctransport loggerta tools logger_core],
                      [\${EXT_SOURCES}/build.sh --extra-deps='libpcre2-8'],
                      [ta_rpcs], [])

           TE_TA_APP([dpdkrpc], [${$1_TA_TYPE}], [${$1_TA_TYPE}],
                     [dpdkrpc], [], [],
                     [rpc_dpdk rpcs_dpdk comm_net_agent ndn asn dpdktad dpdkrpcserver dpdkrpclib rpcxdrta \
                          rpc_types rpctransport loggerta tools logger_core],
                     [\${EXT_SOURCES}/build.sh], [], [RTE_SDK])

           TE_TA_APP([install_dpdk], ${$1_TA_TYPE}, [${$1_TA_TYPE}],
                     [${TE_TS_TOPDIR}/scripts], [], [${TE_TS_TOPDIR}/scripts], [],
                     [\${EXT_SOURCES}/install-dpdk.sh], [], [])

            if test -n "${SFC_LINUX_NET_SRC}"; then
                TE_TA_APP([sfc_linux_net], [${$1_TA_TYPE}], [${$1_TA_TYPE}],
                          [${SFC_LINUX_NET_SRC}], [], [], [],
                          [${SF_TS_CONFDIR}/scripts/build-sfc-linux-net])
            fi

           TE_TCE([${$1_TA_TYPE}], [agent], [], [unix], [])
           TE_TCE([dpdkrpc], [app], [${$1_TA_TYPE}], [], [])
        fi
    fi
])

TE_AGENT_BUILD([TE_TST1])
TE_AGENT_BUILD([TE_IUT])
TE_AGENT_BUILD([TE_HYPERVISOR])
TE_AGENT_BUILD([TE_LOG_LISTENER])
